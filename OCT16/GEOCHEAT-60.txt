##########################################################################################################
################ Programming Website Crawler (PWC) #######################################################
##########################################################################################################



CodeChef submission 11776620 (C++14) plaintext list. Status: RE, problem GEOCHEAT, contest OCT16. By yr96 (yr96), 2016-10-11 02:11:07.

	#include<iostream>
	#include<cstdio>
	#include<vector>
	#include<algorithm>
	using namespace std;
	struct pt{
	long long x,y;
	pt (long long _x,long long _y){
	x=_x;
	y=_y;
	}
	};
	bool cw(pt a,pt b,pt c);
	bool ccw (pt a, pt b, pt c);
	void hull(vector<pt> &a);
	long long Dist(pt a,pt b);
	long long maxDist(vector<pt> a);
	int main(){
	
	int n;
	vector<pt> pairs;
	scanf("%d",&n);
	
	for(int i=0;i<n;i++){
	long long x,y;
	scanf("%lld%lld",&x,&y);
	pairs.push_back(pt(x,y));
	long long ans2=maxDist(pairs);
	cout<<ans2<<endl;
	}
	
	
	return 0;
	}
	
	
	bool cmp(pt a,pt b) {
	return a.x <b.x || a.x == b.x && a.y <b.y;
	}
	bool cw(pt a,pt b,pt c) {
	return a.x * (b.y-c.y) + b.x * (c.y-a.y) + c.x * (a.y-b.y) <0;
	}
	bool ccw (pt a, pt b, pt c) {
	return a.x * (b.y-c.y) + b.x * (c.y-a.y) + c.x * (a.y-b.y)> 0;
	}
	void hull(vector<pt> &a){
	if(a.size()==1)return;
	sort(a.begin(),a.end(),cmp);
	vector<pt>up,down;
	pt p1=a[0],p2=a.back();
	up.push_back(p1);
	down.push_back(p1);
	for(int i=1;i<a.size();i++){
	if(i==a.size()-1||cw(p1,a[i],p2)){
	while(up.size()>=2&&!cw(up[up.size()-2],up[up.size()-1],a[i]))up.pop_back();
	up.push_back(a[i]);
	}
	if(i==a.size()-1||ccw(p1,a[i],p2)){
	while(down.size()>=2&&!ccw(down[down.size()-2],down[down.size()-1],a[i]))down.pop_back();
	down.push_back(a[i]);
	}
	}
	a.clear();
	for(int i=0;i<up.size();i++)a.push_back(up[i]);
	for(int i=down.size()-2;i>0;i--)a.push_back(down[i]);
	}
	long long Dist(pt a,pt b){
	return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);
	}
	long long maxDist(vector<pt> a){
	if(a.size()==1)return 0;
	hull(a);
	int i=0,j=0;
	long long ans=0;
	while(i<a.size()){
	long long dist=0,next=0;
	for(int k=j;k<2*a.size();k++){
	int id=k%a.size();
	if(Dist(a[id],a[i])>=dist){
	dist=Dist(a[id],a[i]);
	next=k;
	}
	else break;
	}
	ans=max(ans,Dist(a[next%a.size()-1],a[i]));
	i++;
	j=next;
	}
	return ans;
	}

##########################################################################################################
################  FOR MORE INFO CONTACT ME AT yokeshrana@gmail.com  #######################################
##########################################################################################################


