##########################################################################################################
################ Programming Website Crawler (PWC) #######################################################
##########################################################################################################



CodeChef submission 12588541 (C++14) plaintext list. Status: AC, problem CAPIMOVE, contest JAN17. By yr96 (yr96), 2017-01-17 20:32:55.

	#include <iostream>
	#include <stdio.h>
	#include <algorithm>
	#include <vector>
	#include <list>
	 
	using namespace std;
	bool newval(pair<int, int> x, pair<int, int> u) {
	bool v;
	 
	 
	 
	if(x.first > u.first)
	 
	v=true;
	else
	 
	 
	v=false;
	return v;
	}
	 
	 
	bool calm(pair<int, int> f4, pair<int, int> f5) {
	char c;
	//flag=0
	bool b;
	 
	//checking in oth
	return newval(f4,f5);
	}
	 
	int main() {
	long int test;
	scanf("%ld", &test);
	while(test--) {
	/*
	 
	WRONG ONE
	while(t-->0)
	{
	 
	int n=sc.nextInt(),m=sc.nextInt();
	int a[][]=new int[n+2][m+2];
	int flag=1;
	String c="nothing";
	for (int i = 0; i < n+2; i++) {
	if(i==n+1)c="hello";
	for (int j = 0; j < m+2; j++) {
	// System.out.println("i="+i+" j="+j + " String scanned="+c);
	 
	if(i==0||i==n+1||j==0||j==m+1)
	{ a[i][j]=5;
	// System.out.println("a["+i+"]["+j+"]="+a[i][j]);
	}else{
	 
	if(c.charAt(j-1)=='W')
	{ a[i][j]=1;
	}else
	if(c.charAt(j-1)=='B')
	a[i][j]=2;
	else
	if(c.charAt(j-1)=='A')
	a[i][j]=3;
	// System.out.println("a["+i+"]["+j+"]="+a[i][j]);
	//condition check
	 
	 
	 
	
	}
	}
	 
	 
	// System.out.println("Flag="+flag);
	if(i<n)
	c=sc.next();
	 
	}
	
	for (int i = 2; i < n+2; i++)
	{for (int j = 1; j < m+2; j++)
	{
	if(flag==1){ if(a[i-1][j]==3)//check air
	flag=checkair(i-1,j,a);
	// if(flag==0)System.out.println("air");
	}
	if(flag==1){
	if(a[i-1][j]==1)//check water
	flag=checkwater(i-1,j,a);
	// if(flag==0)System.out.println("water");
	}
	 
	}
	
	}
	 
	 
	if(flag==0)
	System.out.println("no");
	else
	System.out.println("yes");
	 
	 
	}
	}
	 
	private static int checkwater(int i, int j,int a[][]) {
	//checking boundaries
	if(a[i][j-1]==5)
	return 0;
	else if(a[i][j+1]==5)
	return 0;
	else if(a[i+1][j]==5)
	return 0;
	//check internal
	else if(a[i][j-1]==3)
	return 0;
	else if(a[i][j+1]==3)
	return 0;
	else if(a[i+1][j]==3)
	return 0;
	else return 1;
	 
	}
	 
	private static int checkair(int i, int j, int[][] a) {
	if(a[i-1][j]==2)
	return 0;
	else
	if(a[i-1][j]==3)
	return checkair(i-1, j, a);
	else
	return 1;
	
	}
	 
	}
	*/
	int nodes;
	cin>>nodes;
	vector<pair<int, int> > pointin2d(nodes);
	vector<int> population(nodes);
	int m = 0, mi = 0;
	for(int i = 0; i < nodes; i++) {
	int val;
	cin>>val;
	population[i] = val;
	}
	 
	for(int i = 0; i < nodes; i++) {
	pointin2d[i].first = population[i];
	pointin2d[i].second = i;
	}
	sort(pointin2d.begin(), pointin2d.end(), calm);
	 
	vector<vector<bool> > points(nodes, vector<bool> (nodes));
	for(int i = 0; i < nodes-1; i++) {
	int val1, val2;
	cin>>val1>>val2;
	points[--val1][--val2] = 1;
	points[val2][val1] = 1;
	points[i][i] = 1;
	}
	int y=nodes-1;
	 
	 
	points[y][y] = 1;
	for(int k = 0; k < nodes; k++) {
	int j;
	for(int h = 0; h < nodes; h++) {
	j=h;
	if(points[k][pointin2d[j].second] == 0) {
	cout<<(pointin2d[j].second+1);
	cout<<" ";
	break;
	}
	}
	if(j == nodes)
	cout<<"0 ";
	}
	cout<<endl;
	}
	return 0;
	}
	

##########################################################################################################
################  FOR MORE INFO CONTACT ME AT yokeshrana@gmail.com  #######################################
##########################################################################################################


