##########################################################################################################
################ Programming Website Crawler (PWC) By Yokesh Rana  #######################################
##########################################################################################################


import java.io.DataInputStream;
	import java.io.FileInputStream;
	import java.io.IOException;
	import java.math.BigInteger;
	Â 
	class Codechefoctober {
	static class Reader
	{
	final private int BUFFER_SIZE = 1 << 16;
	private DataInputStream din;
	private byte[] buffer;
	private int bufferPointer, bytesRead;
	
	public Reader()
	{
	din = new DataInputStream(System.in);
	buffer = new byte[BUFFER_SIZE];
	bufferPointer = bytesRead = 0;
	}
	
	public Reader(String file_name) throws IOException
	{
	din = new DataInputStream(new FileInputStream(file_name));
	buffer = new byte[BUFFER_SIZE];
	bufferPointer = bytesRead = 0;
	}
	
	public String readLine() throws IOException
	{
	byte[] buf = new byte[64]; // line length
	int cnt = 0, c;
	while ((c = read()) != -1)
	{
	if (c == '\n')
	break;
	buf[cnt++] = (byte) c;
	}
	return new String(buf, 0, cnt);
	}
	
	public int nextInt() throws IOException
	{
	int ret = 0;
	byte c = read();
	while (c <= ' ')
	c = read();
	boolean neg = (c == '-');
	if (neg)
	c = read();
	do
	{
	ret = ret * 10 + c - '0';
	} while ((c = read()) >= '0' && c <= '9');
	
	if (neg)
	return -ret;
	return ret;
	}
	
	public long nextLong() throws IOException
	{
	long ret = 0;
	byte c = read();
	while (c <= ' ')
	c = read();
	boolean neg = (c == '-');
	if (neg)
	c = read();
	do {
	ret = ret * 10 + c - '0';
	}
	while ((c = read()) >= '0' && c <= '9');
	if (neg)
	return -ret;
	return ret;
	}
	
	public double nextDouble() throws IOException
	{
	double ret = 0, div = 1;
	byte c = read();
	while (c <= ' ')
	c = read();
	boolean neg = (c == '-');
	if (neg)
	c = read();
	
	do {
	ret = ret * 10 + c - '0';
	}
	while ((c = read()) >= '0' && c <= '9');
	
	if (c == '.')
	{
	while ((c = read()) >= '0' && c <= '9')
	{
	ret += (c - '0') / (div *= 10);
	}
	}
	
	if (neg)
	return -ret;
	return ret;
	}
	
	private void fillBuffer() throws IOException
	{
	bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
	if (bytesRead == -1)
	buffer[0] = -1;
	}
	
	private byte read() throws IOException
	{
	if (bufferPointer == bytesRead)
	fillBuffer();
	return buffer[bufferPointer++];
	}
	
	public void close() throws IOException
	{
	if (din == null)
	return;
	din.close();
	}
	}
	
	public static void main (String[] args) throws IOException {
	Reader s=new Reader();
	int t=s.nextInt();
	while(t-->0)
	{
	int n=s.nextInt(),m=s.nextInt();
	
	BigInteger[] a=new BigInteger[n];
	for (int i = 0; i < a.length; i++)
	a[i]=BigInteger.valueOf(s.nextLong());
	int ans=0;
	while(m-->0){
	int q=s.nextInt();
	int l=s.nextInt(),r=s.nextInt();
	switch (q) {
	case 1:
	long x=s.nextLong();
	for (int i = l-1; i < r; i++)
	{a[i]=a[i].multiply(BigInteger.valueOf(x));
	}
	break;
	case 2:
	long y=s.nextLong();
	for (int i = l-1; i < r; i++){
	a[i]=BigInteger.valueOf((i-l+2)*y);
	}
	break;
	case 3:
	// System.out.println("hello");
	BigInteger bigbig=new BigInteger("1");
	for (int i = l-1; i < r; i++)
	{
	bigbig=bigbig.multiply(a[i]);
	}
	
	StringBuilder snn=new StringBuilder(bigbig.toString());
	snn=snn.reverse();
	int sdsf=1;
	while(sdsf==1){
	if(snn.charAt(0)=='0')
	snn=snn.deleteCharAt(0);
	else sdsf=0;
	}
	//System.out.println(bigbig.toString().length()-snn.length());
	ans+=bigbig.toString().length()-snn.length();
	break;
	default:
	break;
	}
	
	
	
	
	}
	
	System.out.println(ans);
	
	
	}
	
	
	
	
	
	
	}
	
	}
	
	
	
	

##########################################################################################################
################  FOR MORE INFO CONTACT ME AT yokeshrana@gmail.com  #######################################
##########################################################################################################


